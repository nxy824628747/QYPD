package com.inspur.approval;import com.microsoft.sqlserver.jdbc.SQLServerException;import org.springframework.jdbc.core.JdbcTemplate;import java.io.*;import java.net.URL;import java.util.List;import java.util.Map;import static java.lang.Thread.sleep;/** * @Author Nxy * @Date 2019/12/27 15:24 * @Param * @Return * @Exception * @Description 排队人数扫描器，满足重启条件则重启排队服务 */public class Scanner {    //数据库地址:端口    static String dbUrl = "10.1.232.200:1433";    //数据库用户名    static String dbUserName = "sa";    //数据库密码    static String dbPassword = "!QAZ2wsx";    //数据库名    static String dbName = "pddb";    //bat文件脚本路径    static String batPath = "D:\\PD\\fenpeichuangkou\\start.bat";    static String killPath = "D:\\PD\\fenpeichuangkou\\kill.bat";    //排队人数阈值    static int door = 70;    //上次排队人数    volatile static int queNum;    //查询排队人数的sql语句    static String sql = "select count(*) as num from pddb.dbo.Gkjl WHERE Cdate=(select CONVERT(varchar(10),GETDATE(),120)) and Ctype like '%023' and Cstate='等待'";    //数据库连接时    static JdbcTemplate jdt;    static String path;    /**     *   @Author Nxy     *   @Date 2019/12/27 14:59     *   @Description 初始化全局参数     */    static {        jdt = DBTools.getSqlSeverJdbcTemplate(dbUrl, dbName, dbUserName, dbPassword);        queNum=getNum();        System.out.println("********初始化排队人数为  ：  " + queNum+"   人********");        System.out.println("正在关闭排队服务...");        CmdTools.callCmd("cmd /c start " + killPath, "排队服务");        sleepHadnler(5000);        System.out.println("尝试启动排队服务");        CmdTools.callCmd("cmd /c start " + batPath, "排队服务");    }    public static void main(String[] args) {        while (true) {            List<Map<String, Object>> lm;            try {                lm = jdt.queryForList(sql);            } catch (Exception sqlEx) {                //大部分情况是数据库重启或网络波动、数据库连接失效，休眠2分钟后重试                sleepHadnler(120000);                jdt = DBTools.getSqlSeverJdbcTemplate(dbUrl, dbName, dbUserName, dbPassword);                lm = jdt.queryForList(sql);            }            //空结果处理            if (lm == null) {                System.out.println("数据库查询结果为空！");                //防止空指针异常，未预料到的结果。为防止错误的重启服务，退出循环                break;            }            Map<String, Object> m = lm.get(0);            Integer num = (Integer) m.get("num");            //重启排队服务            if ((queNum < door && num >= door) || (queNum >= door && num < door)) {                System.out.println("正在关闭排队服务...");                CmdTools.callCmd("cmd /c start " + killPath, "关闭排队服务");                sleepHadnler(5000);                System.out.println("尝试启动排队服务");                CmdTools.callCmd("cmd /c start " + batPath, "排队服务");            }            System.out.println("********上次扫描排队人数为  ：  " + queNum+"   人********");            //更新queNum            queNum = num;            System.out.println("********本次扫描排队人数为  ：  " + queNum+"   人********");            //一分钟后进行下一次检查            sleepHadnler(60000);        }    }    /**     * @Author Nxy     * @Date 2019/12/27 15:28     * @Description 包装sleep     */    private static void sleepHadnler(int time) {        try {            sleep(time);        } catch (InterruptedException e) {            e.printStackTrace();        }    }    /**     * @Author Nxy     * @Date 2019/12/27 15:27     * @Description 启动时初始化排队人数。因为启动时有人员观测控制台，出现报错可及时被运维人员发现，不做复杂异常处理。     */    private static int getNum() {        List<Map<String, Object>> lm;        lm = jdt.queryForList(sql);        Map<String, Object> m = lm.get(0);        Integer num = (Integer) m.get("num");        return num;    }    /**     * @Author Nxy     * @Date 2019/12/27 15:57     * @Description 获取当前相对路径     */    private static String getPath() throws IOException {        URL u = DBTools.class.getResource("/");        System.out.println(u);        String str = u.getPath();        File file = new File(str);        String fatherPath = file.getPath().replace("file:\\", "");        fatherPath = fatherPath.replace("Demo\\taobao-sdk-java-auto_1455552377940-20160607.jar!", "");        return fatherPath;    }}